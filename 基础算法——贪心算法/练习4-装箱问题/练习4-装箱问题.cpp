// 练习4-装箱问题.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;
int aa[4] = { 0,5,3,1 };
/*
	表示3*3的产品分别是4k，4k+1，4k+2，4k+3时，为3*3产品打开的新盒子中剩余的2*2空位数
*/
int main()
{
	int a = 1, b, c, d, e, f, x, y, n;
	while (1)
	{
		cin >> a >> b >> c >> d >> e >> f;
		if (a==0 && b==0 && c==0 && d==0 && e==0 && f==0)
		{
			break;
		}
		n = f + e + d + (c + 3) / 4;
		y = 5 * d + aa[c % 4];
		/*
			y是当前箱子的剩余空间能放2*2箱子的个数，没有出现e、f是因为5*5、6*6放不下
			5*d是只放d个4*4的箱子时能放2*2的箱子的个数
		*/
		if (b>y)
		{
			n += (b - y + 8) / 9;//如果不够放，则增加高度
		}
		x = 36 * n - 36 * f - 25 * e - 16 * d - 9 * c - 4 * b;
		//x是当前箱子的剩余空间能放1*1箱子的个数
		if (a>x)
		{
			n += (a - x + 35) / 36;
		}
		cout << n << endl;
	}
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
